{
	"name": "pl_employee_ingestion_snowflake",
	"properties": {
		"activities": [
			{
				"name": "Copy Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_copy_employee_data",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_employee_destination",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "SELECT\n    '@{pipeline().DataFactory}' as DataFactoryName,\n    '@{pipeline().Pipeline}' as PipelineName,\n    '@{pipeline().RunId}' as RunId,\n    'TotalSaleTable' as Source,\n    'TotalSale CSV File' as Destination,\n    '@{activity('Copy Data').output.dataRead}' as DataRead,\n    '@{activity('Copy Data').output.dataWritten}' as DataWritten,\n    '@{activity('Copy Data').output.copyDuration}' as CopyDuration,\n    '@{activity('Copy Data').output.filesRead}' as FilesRead,\n    '@{activity('Copy Data').output.filesWritten}' as FilesWritten,\n    '@{activity('Copy Data').output.sourcePeakConnections}' as SourcePeakConnections,\n    '@{activity('Copy Data').output.sinkPeakConnections}' as SinkPeakConnections,\n    '@{activity('Copy Data').output.durationInQueue}' as DurationInQueue",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "ds_snowflake_datasets",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_source_Binary1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_dest_Binary1",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"audit_data": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-10-02T03:02:42Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}